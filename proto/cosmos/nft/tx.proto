syntax = "proto3";
package cosmos.nft;

import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";
import "cosmos/nft/params.proto";
import "google/protobuf/any.proto";

// this line is used by starport scaffolding # proto/tx/import
option go_package = "github.com/cosmos/cosmos-sdk/x/nft/types";

// Msg defines the Msg service.
service Msg {
  // Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721
  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);

  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);

  // Class queries an NFT class based on its id
  rpc Send(MsgSend) returns (MsgSendResponse);

  rpc Withdraw (MsgWithdrawal) returns (MsgWithdrawalResponse);

  rpc Redelegate ( MsgRedelegate) returns (MsgRedelegateResponse);
}

message MsgWithdrawal {
  string creator = 1;
  string address = 2;
  cosmos.base.v1beta1.Coin amount = 5 [(gogoproto.nullable) = false];

}

message MsgWithdrawalResponse {}

message MsgDelegate {
  string creator = 1;
  string address = 2;
  string validator = 3;
  cosmos.base.v1beta1.Coin amount = 5 [(gogoproto.nullable) = false];

}

message MsgDelegateResponse {}

message MsgUndelegate {
  string creator = 1;
  string address = 2;
  string validator = 3;
  cosmos.base.v1beta1.Coin amount = 5 [(gogoproto.nullable) = false];

}

message MsgUndelegateResponse {}

message MsgSend {
  string creator = 1;
  string address = 2;
  string recipient = 3;
  cosmos.base.v1beta1.Coin amount = 5 [(gogoproto.nullable) = false];
}

message MsgSendResponse {}

message MsgRedelegate {
  string creator = 1;
  string address = 2;
  string validatorSrc = 3;
  string validatorNew = 4;
  cosmos.base.v1beta1.Coin amount = 5 [(gogoproto.nullable) = false];
}

message MsgRedelegateResponse {}